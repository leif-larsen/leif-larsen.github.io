<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leif Larsen</title>
    <link>https://www.leiflarsen.org/</link>
    <description>Recent content on Leif Larsen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 09 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.leiflarsen.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About me</title>
      <link>https://www.leiflarsen.org/about/</link>
      <pubDate>Tue, 09 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/about/</guid>
      <description>Leif is a senior software consultant, focusing on .NET development. He has about 10 years experience in the IT field, and has worked both in-house and as a consultant.
He prefers to work on the backend of systems, but is not afraid to work with frontend technologies.
Over the years, his curiosity has led him to build a couple of mobile applications, using cross-platform technologies. He has also written a book (in three editions) on how to get started with Azure Cognitive Services.</description>
    </item>
    
    <item>
      <title>A great tool for increased productivity - Microsoft PowerToys</title>
      <link>https://www.leiflarsen.org/posts/a-great-tool-for-increased-productivity-microsoft-powertoys/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/a-great-tool-for-increased-productivity-microsoft-powertoys/</guid>
      <description>A few months back, I came across a tool from Microsoft called PowerToys. Since I&amp;rsquo;ve been using it and finding it useful, I thought I&amp;rsquo;d share it with others as well.
Microsoft PowerToys is a set of tools for power users of Windows, which sets out to enhance productivity. At the time of writing, the following list describes the current feature set:
 Color picker - A handy tool that allows you to select colors from any running application, and shows both the HEX and RGB values.</description>
    </item>
    
    <item>
      <title>On Burning the Candle From All Sides</title>
      <link>https://www.leiflarsen.org/posts/on-burning-the-candle-from-all-sides/</link>
      <pubDate>Tue, 19 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/on-burning-the-candle-from-all-sides/</guid>
      <description>At the time of writing, it&amp;rsquo;s been 2 years, 3 months and 25 days since my last blog post. Since that, I have released a book, released the follow-up version, and even a third edition. I have moved four times, including to a new city. I changed my job and joined a startup. I&amp;rsquo;ve met my significant other, and we just had our first child.
 TLDR: Worked hard, both with full time job and side projects.</description>
    </item>
    
    <item>
      <title>Writing a book</title>
      <link>https://www.leiflarsen.org/posts/writing-a-book/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/writing-a-book/</guid>
      <description>It&amp;rsquo;s been a few months since my last post here. The reason for this, is that I&amp;rsquo;m currently writing a book, which I&amp;rsquo;m rather excited about.
The book I&amp;rsquo;m writing is about Microsoft Cognitive Services, and is aimed at .NET developers. It aims to provide some introduction to the different APIs. The goal that the reader is able to use the services, for whatever ideas they might have. The book itself is called &amp;ldquo;Learning Microsoft Cognitive Services&amp;rdquo;, and will be released by Packt Publishing.</description>
    </item>
    
    <item>
      <title>Creating build server status lamps</title>
      <link>https://www.leiflarsen.org/posts/creating-build-server-status-lamps/</link>
      <pubDate>Sat, 13 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/creating-build-server-status-lamps/</guid>
      <description>Today I decided to do some tinkering with some of the IoT stuff I have laying around. Quite recently I started on another personal project, which I will do quite a bit of work on over the next few months. I decided that it would be good to setup a build server for the project, to be able to build and test the project, so I don&amp;rsquo;t break anything during development.</description>
    </item>
    
    <item>
      <title>Recommending a blog   Coding with Empathy</title>
      <link>https://www.leiflarsen.org/posts/recommending-a-blog-coding-with-empathy/</link>
      <pubDate>Sat, 30 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/recommending-a-blog-coding-with-empathy/</guid>
      <description>Today I&amp;rsquo;m starting a new series of post. Every last Sunday of each month I&amp;rsquo;ll recommend a new blog. Each blog will be one I often read, and find worthwhile to spend time on. The posts will be kept short and to the point, to let you spend more time exploring the blog in questions yourself.
This Sunday I want to recommend Coding with Empathy, written by Pavneet Singh Saund. It is a blog that puts a lot of focus on empathy in software development, and how we as developers can become better by focusing more on empathy and soft skills.</description>
    </item>
    
    <item>
      <title>Put a name to the face   Microsoft Cognitive Services</title>
      <link>https://www.leiflarsen.org/posts/put-a-name-to-the-face-microsoft-cognitive-services/</link>
      <pubDate>Wed, 27 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/put-a-name-to-the-face-microsoft-cognitive-services/</guid>
      <description>This is the second post in a series of posts, where we&amp;rsquo;ll look into Microsoft Cognitive Services. More specifically we&amp;rsquo;re looking at the Face API, and what that can do for us in terms of identifying people. The end goal is to connect a web camera to a Raspberry Pi, grab an image of a person, identify that person and show the name on a screen.
In the first post we described some basic terms one should know and we looked at how you could get API keys for the Face API.</description>
    </item>
    
    <item>
      <title>What I can learn in development from fixing my car</title>
      <link>https://www.leiflarsen.org/posts/what-i-can-learn-in-development-from-fixing-my-car/</link>
      <pubDate>Sat, 23 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/what-i-can-learn-in-development-from-fixing-my-car/</guid>
      <description>A few weeks back I had a problem with my car. The windscreen wiper wouldn&amp;rsquo;t work, or it was rather slow when it did work. Being an older model car, I figured I could probably fix it myself. Long story short, I did fix it myself.
After I had fixed it, I started to think about the process I&amp;rsquo;d been through. Interestingly enough I discovered that there were at least a couple of things, which I could relate back to software development.</description>
    </item>
    
    <item>
      <title>Getting started with Microsoft Cognitive Services   Face API</title>
      <link>https://www.leiflarsen.org/posts/getting-started-with-microsoft-cognitive-services-face-api/</link>
      <pubDate>Wed, 20 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/getting-started-with-microsoft-cognitive-services-face-api/</guid>
      <description>As the world gets increasingly more data power, we are enabled to do more things (in the lack of better words). One of those things is to make computers and applications more intelligent, and Microsoft have created a series of API&amp;rsquo;s to help doing so. Using Microsoft Cognitive Services you&amp;rsquo;re able to do use a whole bunch of API&amp;rsquo;s, ranging from translation, searching, language-based and facial recognition. I find a lot of them interesting, especially the Face API, which I&amp;rsquo;ll spend some time taking a closer look at.</description>
    </item>
    
    <item>
      <title>Summing up my week with NET Best Practices and Design Patterns</title>
      <link>https://www.leiflarsen.org/posts/summing-up-my-week-with-net-best-practices-and-design-patterns/</link>
      <pubDate>Sat, 16 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/summing-up-my-week-with-net-best-practices-and-design-patterns/</guid>
      <description>I&amp;rsquo;ve spent this week in London, attending a course on best practices and design patterns. The course was aimed at .NET developers, where the following was the main targets in terms of what we were to learn:
 Solve complex programming problems using design patterns
Deliver bug-free code using test-driven development in Visual Studio
Create layered architectures for reusability and eliminating functional duplication
Apply the S.O.L.I.D. principles for better class design</description>
    </item>
    
    <item>
      <title>NET Best Practices and Design Patterns   Day 2</title>
      <link>https://www.leiflarsen.org/posts/net-best-practices-and-design-patterns-day-2/</link>
      <pubDate>Tue, 12 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/net-best-practices-and-design-patterns-day-2/</guid>
      <description>Day 2 of the course continued where we left of yesterday, namely with topics in regards to test-driven development. So far this day was the one with the most design patterns in it, as we went through a whole bunch in chapter 4. We also started on chapter 5, however I think it&amp;rsquo;s best to leave my notes for that until we finish it on day 3. I see that chapter 3 comes out weirdly (split over two posts), so I&amp;rsquo;ll write about the entire chapter 5 tomorrow.</description>
    </item>
    
    <item>
      <title>NET Best Practices and Design Patterns   Day 1</title>
      <link>https://www.leiflarsen.org/posts/net-best-practices-and-design-patterns-day-1/</link>
      <pubDate>Mon, 11 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/net-best-practices-and-design-patterns-day-1/</guid>
      <description>Monday night I arrived in London, ready to attend .NET Best Practices and Design Patterns. Yesterday we had our first day. In the classroom we&amp;rsquo;re 9 students, and there&amp;rsquo;s three attending online. There was about an hour of introductions and practical information before we dived into the first module of the course, so lets do the same here.
##Chapter 1 ###Facade Pattern The facade pattern is a pattern that aims to make something complex easy to use.</description>
    </item>
    
    <item>
      <title>Heading to London to attend a course</title>
      <link>https://www.leiflarsen.org/posts/heading-to-london-to-attend-a-course/</link>
      <pubDate>Sat, 09 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/heading-to-london-to-attend-a-course/</guid>
      <description>The last four weeks have been intense. At work we had a tight schedule to be able to release our software before the vacation time, with a lot to do (meaning overtime, and a lack of energy when coming home). At home there&amp;rsquo;s been a lot of stuff happening with our appartment, which I&amp;rsquo;ll probably write about later, when it&amp;rsquo;s all sorted out.
Anyway, we got the software released, and many of my colleagues are on vacation.</description>
    </item>
    
    <item>
      <title>Attending PubConf</title>
      <link>https://www.leiflarsen.org/posts/attending-pubconf/</link>
      <pubDate>Sat, 18 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/attending-pubconf/</guid>
      <description>Last week NDC took place in Oslo. Unfortunately I were not able to attend this year, but I were able to attend PubConf, which took place the day after NDC ended.
##The what
 Not quite a conference;
Not exactly an after party;
Inspirational conversations with amazing developers
 This is what PubConf is described as on their own site, and that is exactly what it is. A lot of people met up at a pub in Oslo, beers where served, pub food were served and conversations were held.</description>
    </item>
    
    <item>
      <title>Git command line cheatsheet</title>
      <link>https://www.leiflarsen.org/posts/git-command-line-cheatsheet/</link>
      <pubDate>Sun, 05 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/git-command-line-cheatsheet/</guid>
      <description>All my life I&amp;rsquo;ve been using graphical user interfaces for applications that have provided it. It&amp;rsquo;s been quicker to get into, and I have never really liked the command line. What I&amp;rsquo;ve noticed lately is that I&amp;rsquo;ve been trying to use the command line more. Just typing commands, instead of moving the mouse all over the screen, is generally quicker, which makes me more productive. This post is a reference for Git commands, mostly for myself, but hopefully others might find it useful as well.</description>
    </item>
    
    <item>
      <title>Podcast recommendation Developer on Fire</title>
      <link>https://www.leiflarsen.org/posts/podcast-recommendation-developer-on-fire/</link>
      <pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/podcast-recommendation-developer-on-fire/</guid>
      <description>Recently I started listening to the podcast called Developer on Fire, hosted by Dave Rael. Each episodes features a guest, and the whole idea of the show is that Dave talks to each guest while they tell their stories.
The show describes itself like this:
 Podcast with inspiring interviews with successful software developers, architects, testers, and other professionals with stories of success, failure, excellence, and inspiration
 In all the episodes I&amp;rsquo;ve heard so far, I&amp;rsquo;ve picked up quite a bit of inspiration.</description>
    </item>
    
    <item>
      <title>Issues with Apple Bootcamp and Windows</title>
      <link>https://www.leiflarsen.org/posts/issues-with-apple-bootcamp-and-windows/</link>
      <pubDate>Sun, 01 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/issues-with-apple-bootcamp-and-windows/</guid>
      <description>Over the last week, I&amp;rsquo;ve had some serious issues with my Windows 10 installation, running on my Mac Mini. It started early last week, where I had some difficulties with my wifi. The wifi have had issues earlier as well, but now I actually got sick of it, and though I&amp;rsquo;d try to fix it.
Bad idea! Having done my fair share of support involving drivers over the years, I decided to reinstall the network driver on Windows.</description>
    </item>
    
    <item>
      <title>Moving away from Parse</title>
      <link>https://www.leiflarsen.org/posts/moving-away-from-parse/</link>
      <pubDate>Fri, 29 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/moving-away-from-parse/</guid>
      <description>As I wrote in my post, Cloud based back end service, I have been using Parse for data storage for my two apps, &amp;ldquo;Din Lokale Dyrlege&amp;rdquo; and &amp;ldquo;Parker Gratis&amp;rdquo;. Now however, it is time for a change. Not because I want to, but I am forced to do so, since Parse is shutting down.
##New options
Before deciding how to proceed, given that I had to change something, there is several factors I have to consider.</description>
    </item>
    
    <item>
      <title>InitializeComponent doesnt exist in current context</title>
      <link>https://www.leiflarsen.org/posts/initializecomponent-doesnt-exist-in-current-context/</link>
      <pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/initializecomponent-doesnt-exist-in-current-context/</guid>
      <description>At Build 2016 it was announced that Xamarin would be included with Visual Studio, at no extra cost. It would also be included with Visual Studio Community Edition, rendering it completely free, which is great news. Anyway, when the update for Visual Studio became available I installed it and went to test my Xamarin apps with Visual Studio.
Unfortunately, though, I ran into an issue with compilation. The compiler was complaining that InitializeComponent() did not exist in current context.</description>
    </item>
    
    <item>
      <title>Moving from WordPress to Ghost</title>
      <link>https://www.leiflarsen.org/posts/moving-from-wordpress-to-ghost/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/moving-from-wordpress-to-ghost/</guid>
      <description>Last week I introduced my new blog, powered by the Ghost blog platform. Coming from a WordPress background, I had to do some work to get all my posts, as well as comments imported to the new blog. Seeing as I also put the new blog onto a subdomain, there was a few tricky parts during the setup. This blog post will take you through the steps required to make the move from WordPress to Ghost.</description>
    </item>
    
    <item>
      <title>Creating a mobile app with web technology</title>
      <link>https://www.leiflarsen.org/posts/creating-a-mobile-app-with-web-technology/</link>
      <pubDate>Sun, 13 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/creating-a-mobile-app-with-web-technology/</guid>
      <description>In this post I will go through my first-impression of using HTML/CSS/JavaScript for mobile app development. The background for doing so is that I’ve been spending quite a lot of time at FreeCodeCamp lately, and now feel comfortable enough to try to do some comparing with Xamarin and C#. To be able to see some similarities, I have chosen to create an app similar to one I have done with Xamarin, a map application.</description>
    </item>
    
    <item>
      <title>Dealing with app reviews</title>
      <link>https://www.leiflarsen.org/posts/dealing-with-app-reviews/</link>
      <pubDate>Sun, 06 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/dealing-with-app-reviews/</guid>
      <description>In todays post I’d like to bring up the topic on how to deal with app reviews. The background for this is the first app I released, a few years ago, called myRemote. This is an app, which at the time, was created primarily because I wanted to control my Onkyo receiver with my Surface RT. As you probably can guess, it was created for Windows RT, and before I really knew too much of C# and .</description>
    </item>
    
    <item>
      <title>IoC and Dependency Injection</title>
      <link>https://www.leiflarsen.org/posts/ioc-and-dependency-injection/</link>
      <pubDate>Sun, 28 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/ioc-and-dependency-injection/</guid>
      <description>On some of the code I work on at a daily basis, I have noticed that IoC and dependency injection is used. When I first saw these concepts, I just did a quick read to see what it was, but didn’t really put much energy into it, as it was not something I directly used myself. This did eventually change, and I were assigned a task, which would include using an IoC container, and as such I figured it was time to try to understand what was going on.</description>
    </item>
    
    <item>
      <title>Installing JDK on Linux with terminal</title>
      <link>https://www.leiflarsen.org/posts/installing-jdk-on-linux-with-terminal/</link>
      <pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/installing-jdk-on-linux-with-terminal/</guid>
      <description>This weekend I have been participating in a virtual hackathon, hosted by Koding.com. I teamed up with my sister, her boyfriend and two class mates of his, all which are computer engineering students. The task at the hackathon was to create a web app in one of three categories; data visualization, productivity or games. We chose productivity.
As a part of this hackathon we were given a virtual machine at koding.</description>
    </item>
    
    <item>
      <title>Know when to rest</title>
      <link>https://www.leiflarsen.org/posts/know-when-to-rest/</link>
      <pubDate>Sun, 14 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/know-when-to-rest/</guid>
      <description>Yesterday I read an article from Jose Gonzalez, over at Mind Body Soul Developer, called “The Art of Doing Nothing“, which brings up an important subject; Resting and relaxing. I am not going to talk a lot on this, as I think Jose has done a good job describing all about it in his post.
In essence the post covers his experience of having a bad day and how he deals with it.</description>
    </item>
    
    <item>
      <title>Releasing an app   iOS</title>
      <link>https://www.leiflarsen.org/posts/releasing-an-app-ios/</link>
      <pubDate>Sun, 07 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/releasing-an-app-ios/</guid>
      <description>In this last post in this series we will take a look at the process of releasing an app for iOS, after development with Xamarin Forms. Over the last few weeks I have gone through this process for Windows Phone and for Android. In terms of what you, as the developer, need to do, the release process for iOS is not much different than the others, especially for Android. You need to fill in information on the app, build the app for release and upload the app.</description>
    </item>
    
    <item>
      <title>Releasing an app   Android</title>
      <link>https://www.leiflarsen.org/posts/releasing-an-app-android/</link>
      <pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/releasing-an-app-android/</guid>
      <description>Last week I wrote the first post in the “Releasing an app” series, on Windows Phone. Originally this week was to be about iOS, however due to some technical trouble, I have temporarily lost all the screen shots I had prepared. Therefore, I will do this week’s post on releasing an app, developed with Xamarin Forms, for Android.
As you will see through this post, the release process for Android is, at least in my opinion, the easiest of the three.</description>
    </item>
    
    <item>
      <title>Releasing an app   Windows Phone</title>
      <link>https://www.leiflarsen.org/posts/releasing-an-app-windows-phone/</link>
      <pubDate>Sun, 24 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/releasing-an-app-windows-phone/</guid>
      <description>Seeing as my new app, “Din Lokale Dyrlege”, was released last week, I thought I could go through the process of releasing an app. I released this app for iOS, Android and Windows Phone, using Xamarin Forms to achieve cross-platform development. This meant I could program once, and utilize most of my code for all three platforms.
Now the interesting thing is going through the release process. It can be quite “confusing”, and not completely straight forward to release an app, maybe even more so if you use Xamarin Forms.</description>
    </item>
    
    <item>
      <title>New app released</title>
      <link>https://www.leiflarsen.org/posts/new-app-released/</link>
      <pubDate>Sun, 17 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/new-app-released/</guid>
      <description>Today I am officially announcing that my second app, “Din Lokale Dyrlege” (Your Local Vet), has been released. This is an app released only for the Norwegian app stores, for iOS, Windows Phone 8 and Android. I originally aimed to release this app last year, however due to me being a bit behind schedule I didn’t manage that. When I got to the stage where I were to submit the app, it was Christmas, and vacation time for the app store reviewers.</description>
    </item>
    
    <item>
      <title>Official Raspberry Pi Display and Windows 10 IoT Core</title>
      <link>https://www.leiflarsen.org/posts/official-raspberry-pi-display-and-windows-10-iot-core/</link>
      <pubDate>Sun, 10 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/official-raspberry-pi-display-and-windows-10-iot-core/</guid>
      <description>Last year an official touch display for Raspberry Pi was released. Naturally that was something I had to get my hands on, and I did. The screen itself is 7″, has a screen resolution of 800 x 480 px and has 10 finger capacitive touch. For my use I immediately thought of using it as a controller for my home automation system, which is currently in the making.
In this post I will walk you through how to mount the display properly and getting started with it.</description>
    </item>
    
    <item>
      <title>New year   New goals</title>
      <link>https://www.leiflarsen.org/posts/new-year-new-goals/</link>
      <pubDate>Sun, 03 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/new-year-new-goals/</guid>
      <description>Happy new year! A bit late, I know, but better late than never. I hope you all had a nice time during the holiday season. I took some time off from work, and generally tried to disconnect for a bit, which I believe I managed. I have tried to use my time for other stuff than being at the computer (or my phone), which has given me a new boost of energy.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Summary</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-summary/</link>
      <pubDate>Thu, 24 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-summary/</guid>
      <description>Over the past 24 days, I have posted a new post daily, with a new programming language each day. Each post have told a bit about some key features of each language, a bit on the history, typical uses and an example of how to use the language. For me it has been an interesting series, and I have learnt quite a bit.
During this series, I have covered the following languages:</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Python</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-python/</link>
      <pubDate>Wed, 23 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-python/</guid>
      <description>We have finally reached Christmas Eve, and the final language in this series, Python. This is a general-purpose, high-level language, designed to emphasize code readability. It supports object-oriented, imperative and functional, as well as procedural programming styles. It has a large standard library, and it provides a dynamic type system and automatic memory management.
Python is available for many platforms, and there are third-party tools to allow packaging in such a way that you can have it as a stand-alone executable, without needing to install an interpreter.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Go</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-go/</link>
      <pubDate>Tue, 22 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-go/</guid>
      <description>It is the day before Christmas, and today I´ll also talk about a relatively new language, called Go. This is a compiled, statically typed language, primarily designed for systems programming. It has features such as garbage collection, various safety features and CSP-style concurrent programming. Today there are two major implementations. Google has one called “gc”, which is open source and targets different platforms. The second one is called “gccgo”, and is a GCC frontend.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Rust</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-rust/</link>
      <pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-rust/</guid>
      <description>With only a few days left until Christmas, I want to tell you a bit about a relatively new language, Rust. This is a general-purpose, multi-paradigm, compiled language, designed to a safe, concurrent and practical language. It is developed by Mozilla Research, and it supports pure-functional, concurrent-actor, imperative-procedural and object-oriented styles. Today development is sponsored by Mozilla, however it it a open community project.
History
Rust started out as a personal project by Graydon Hoare, from Mozilla.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Visual Basic</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-visual-basic/</link>
      <pubDate>Sun, 20 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-visual-basic/</guid>
      <description>Today I’ll talk a bit about Visual Basic (VB). This is a language in the BASIC family, and it is is a event-driven language and IDE from Microsoft. It was first created to support the COM programming model from Microsoft, and it was intended to be relatively easy to learn. Seeing as it is derived from BASIC it enables rapid development of graphical user interface applications, access to databases using Data Access Objects, Remote Data Objects or ActiveX Data Objects.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Ada</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-ada/</link>
      <pubDate>Sat, 19 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-ada/</guid>
      <description>Today I’ll present the language named in honor of Ada Lovelace, Ada. This is a structured, statically typed, imperative language. It is object-oriented, and high-level, which is extended from Pascal, amongst others. By using the compiler to find errors it improves code safety and maintainability.
The language have built-in support for strong typing, explicit concurrency, synchronous message passing, design-by-contract, and some more features. Ada is an international standard, defined by ISO.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   COBOL</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-cobol/</link>
      <pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-cobol/</guid>
      <description>In this post I will talk a little bit about COBOL (COmmon Business-Oriented Language). This is a language designed for business use. It is imperative and procedural, and as of 2002 it is object-oriented. The language itself is mostly deployed on mainframe computers, and is used in legacy applications, like batch and transaction processing jobs.
The syntax is English-like. This is by design, as it was supposed to be self-documenting and highly readable.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Cobra</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-cobra/</link>
      <pubDate>Thu, 17 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-cobra/</guid>
      <description>In today’s post I’ll introduce a relatively new language, running on the .NET and Mono platforms. The language is called Cobra, and it is a general-purpose, object oriented language. It supports static and dynamic typing, lambda expressions, closures, list comprehensions and generators. Cobra is open-source, currently licensed under the MIT license.
History
Cobra was developed by Charles Esterbrook in 2006. It is heavily inspired by C#, Eiffel, Objective C and Python.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Objective C</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-objective-c/</link>
      <pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-objective-c/</guid>
      <description>With only a week left until Christmas, I want to look into another language used mostly for Apple products, Objective C. This is a general-purpose, object oriented language, which is based on C. Like with C/C++ Objective C source code implementation usually have a program file, with “.m” extension, and header files, with “.h” extensions.
History
In the early 1980s, Brad Cox and Tom Love created Objective C. It was inspired by the language Smalltalk, but it was also critical that it were backward compatible with C, due to it being critical for telecom engineering at their company.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   C</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-c-2/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-c-2/</guid>
      <description>Today I want to tell you about a language, that is one of the most widely used languages of all time, C. This is a general purpose, imperative language, which supports structured programming, lexical variable scope and recursion. Applications that were typically coded in assembly language (including operating systems), now typical is coded in C, due to its efficiency in mapping constructs to machine instructions.
C has been standardized by American National Standards Institute (ANSI) since 1989, and by ISO later.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Swift</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-swift/</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-swift/</guid>
      <description>Today is the day I introduce what I believe will be the youngest language in this series. The new language from Apple, called Swift. This is a compiled language, created for iOS, OS X, watchOS and tvOS development, designed to work with Cocoa/Cocoa Touch frameworks and the body of existing Objective-C code. Compared to Objective-C it is safer and more concise.
Core concepts supported is notably dynamic dispatch, late binding, extensible programming and similar features.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   C&#43;&#43;</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-c-3/</link>
      <pubDate>Sun, 13 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-c-3/</guid>
      <description>In today’s post I want to introduce a language that has inspired many newer languages, C++. This is a general-purpose language, with imperative, object-oriented and generic programming features. It also provides support for low-level memory manipulation. Key strengths is software infrastructure and resource-constrained applications, such as desktop applications, servers and performance-critical applications (telephone switches, space probes etc.).
Today there exists many implementation of the C++ standard, and it is available on many platforms.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Lisp</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-lisp/</link>
      <pubDate>Sat, 12 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-lisp/</guid>
      <description>Day 13, only 11 days left until Christmas, which means another language! Today I am looking into the language family Lisp, and more specifically the dialect Common Lisp. Being one of the earliest programming languages it pioneered many ideas in computer science, such as tree data structures, automatic storage management, dynamic typing, recursion and more.
Lisp derives from “LISt Processor”, and linked lists is one of the major data structures used.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Pascal</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-pascal/</link>
      <pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-pascal/</guid>
      <description>In todays post I look into Pascal. This is a small and efficient language, using structured programming and data structuring it encouraged good programming practices. Unlike most languages in the C family, Pascal allows nested procedure definitions and also declarations inside subroutines. The syntax can then be simple and coherent, and a program is syntactically nearly identical to a single procedure.
History
Pascal was designed by Niklaus Wirth, and published in 1970.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Clojure</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-clojure/</link>
      <pubDate>Thu, 10 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-clojure/</guid>
      <description>As I mentioned in yesterday’s post, today will be about a functional language, called Clojure. This dynamic language targets the Java Virtual Machine. Designed to be general-purpose language, it combines approachability and interactive abilities of a scripting language with an efficient and robust infrastructure for multithreaded programming.
Clojure is compiled into JVM bytecode, but remains dynamic. It provides access to the Java framework. Clojure is a dialect of LISP, and like LISP, it treats code as data.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   PHP</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-php/</link>
      <pubDate>Wed, 09 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-php/</guid>
      <description>In todays post I’ll talk a bit about the second programming language I learnt, PHP. I believe I learnt it by myself in the first year of my education, and if I don’t remember all wrong, I also had a course on it my second or third year at school. For a few years I used it frequently, and I built several web sites with PHP, however now I haven’t really used it for a year or two.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   R</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-r/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-r/</guid>
      <description>In todays post of 24 Days of Hello World, I look into a language and environment for statistical computing and graphics, called R. This language is an implementation of the language “S”, combined with lexical scoping.
The software environment is primarily written in C, Fortran and R. While there are graphical front-ends available, R have a command line interface as a default.
History
Created by Ross Ihaka and Robert Gentleman, R was named based on the first letters in the first names of its authors.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Haskell</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-haskell/</link>
      <pubDate>Mon, 07 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-haskell/</guid>
      <description>For the eight hatch of 24 Days of Hello World I look into Haskell. Haskell is a language I merely have heard of before, so it is definitely interesting to see what it is and what it can be applied to.
Haskell is a general-purpose purely functional language, using strong static typing and non-strict semantics. It is as an open-source product, which allows rapid development of what it claims to be robust and concise software.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Nodejs</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-nodejs/</link>
      <pubDate>Sun, 06 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-nodejs/</guid>
      <description>Today we move into a technology, rather than a language itself. Originally this post was going to be about JavaScript, but I thought it would be better to show off Node.js. Node.js is an open-source, cross-platform runtime environment, created to develop server-side web applications.
Node is designed to optimize an applications throughput for real-time applications. It does this by utilizing non-blocking I/O API, and an event-driven architecture. To execute code it relies on Google V8 JavaScript engine, and most of the basic modules are written in JavaScript.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   F</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-f/</link>
      <pubDate>Sat, 05 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-f/</guid>
      <description>Today I am looking into functional programming. More specifically I’ll look into F#, a strongly typed, multi-paradigm language. Often used as a cross-platform common language infrastructure language.
It is developed by F# Software Foundation, Microsoft and open contributors. It is supported in Visual Studio and Xamarin Studio, and it has its own open source, cross-platform compiler.
History
F# was originally designed and implemented by Don Syme, from Microsoft Research, and it was first released in 2005, supporting .</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Perl</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-perl/</link>
      <pubDate>Fri, 04 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-perl/</guid>
      <description>In the 5th day of 24 days of Hello World I will look into Perl. A language, which has a long history, but where the example itself will be rather short.
Perl is a general-purpose language, designed for text manipulation. It is intended to be easy to use, efficient and complete, in other words practical, as opposed to elegant and minimal. It supports both procedural and object-oriented programming. As a beginner you would probably use procedural more, and object-oriented for third-party modules you may use.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Erlang</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-erlang/</link>
      <pubDate>Thu, 03 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-erlang/</guid>
      <description>In this next post, in the 24 Days of Hello World series, I will look into a language that is older than me, Erlang. Erlang is a general-purpose language used to build massively scalable soft real-time systems.
As opposed to most languages language-level features for creating and managing processes, with the aim to simplify concurrent programming, is provided in Erlang. It removes the need of explicit locks by using message passing instead of shared variables.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Ruby</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-ruby/</link>
      <pubDate>Wed, 02 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-ruby/</guid>
      <description>Day three of the advent calendar, 24 Days of Hello World. Today marks the first day of discussing a language I have not used before, so this is an exciting one! If you didn’t understand so from the title, the language is Ruby.
Ruby is one of those languages I’ve always wanted to take a deeper look at, but never had time or reasons to do so. I believe all I’ve tried is the interactive ruby part, so I have never even looked at writing a class using Ruby.</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   Java</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-java/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-java/</guid>
      <description>For this second day of 24 Days of Hello World it is natural to follow up the previous one, with a language mentioned – Java. Java is the language that is taught in many computer engineering/science classes here in Norway, and like C#, is widely used all around the world. One of the great benefits with Java is that it follows the “write once, run anywhere” philosophy. This basically means that it is supported on any platform (given that they support Java).</description>
    </item>
    
    <item>
      <title>24 Days of Hello World   C#</title>
      <link>https://www.leiflarsen.org/posts/24-days-of-hello-world-c/</link>
      <pubDate>Mon, 30 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/24-days-of-hello-world-c/</guid>
      <description>Today marks the first day of the advent of 2015, and it’s time to open the first hatch of the calendar, 24 Days of Hello World. In this first post I will show of my primary language of choice, C#.
A quick note on my setup. For all the posts in this series I will be run each particular “Hello World” from a Windows 10 machine. The baseline is a clean machine, with Notepad++ installed, as well as Mozilla Firefox, not much more (except the usual stuff that comes with Windows).</description>
    </item>
    
    <item>
      <title>Advent Calendar</title>
      <link>https://www.leiflarsen.org/posts/advent-calendar/</link>
      <pubDate>Sun, 29 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/advent-calendar/</guid>
      <description>This year I have decided to create my own advent calendar on the blog. I see this an opportunity to explore some new programming languages, and as such my advent calendar will be called “24 days of Hello World”. I will post a simple “Hello World” in a new language every day.
In addition to some code example, I will write a bit on the compilers, some advantages and disadvantages, and also typical uses of the particular language.</description>
    </item>
    
    <item>
      <title>Time management and productivity tools</title>
      <link>https://www.leiflarsen.org/posts/time-management-and-productivity-tools/</link>
      <pubDate>Sun, 15 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/time-management-and-productivity-tools/</guid>
      <description>As anyone probably can relate to, time is valuable. There is only 24 hours in a day, and in that time you need to sleep, eat, work, etc. Over the years I have tried several different tools to optimize the way I spend every day, and to make my everyday life as productive as possible. What works for me might not work for you, but I want to share some of the tools I use, and talk a bit about how I make sure I get the most out of every day.</description>
    </item>
    
    <item>
      <title>Essential NET 45 with C</title>
      <link>https://www.leiflarsen.org/posts/essential-net-45-with-c/</link>
      <pubDate>Sun, 08 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/essential-net-45-with-c/</guid>
      <description>Last week I attended a course, called “Essential .NET 4.5 with C#”, in London. The course was hosted by Developmentor (currently in the process of joining Global Knowledge), and the course instructor was Ron Sumida.
The course is aimed at people who is starting with C# and .Net, after a year or so, of experience with Java or C++. I don’t have that experience, but I have been working with .</description>
    </item>
    
    <item>
      <title>XMLRPC and Windows Live Writer</title>
      <link>https://www.leiflarsen.org/posts/xmlrpc-and-windows-live-writer/</link>
      <pubDate>Sun, 18 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/xmlrpc-and-windows-live-writer/</guid>
      <description>At the time of writing this blog post, I am flying home from London. Me and my SO have visited London at least once a year the last few years, so it has become a tradition. This year we had a shorter weekend trip, primarily to go see Hamlet. It was fun trying something new, as we haven’t seen a theater play before, but that is not why I’m writing this post.</description>
    </item>
    
    <item>
      <title>Cloud based back end service</title>
      <link>https://www.leiflarsen.org/posts/cloud-based-back-end-service/</link>
      <pubDate>Sun, 04 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/cloud-based-back-end-service/</guid>
      <description>When working with mobile applications (or applications in general) there is often a need to store and retrieve data. For informational apps you could simply have a local database, with all data present. However when developing apps for smart phones (and tablets) you need to consider the size of the app. You don’t want to store a lot of data, when the user might need only a subset of it. Naturally this is dependent on how much data you have to store, but for this post I’ll focus on apps that stores a greater amount of data.</description>
    </item>
    
    <item>
      <title>E mail course on blogging</title>
      <link>https://www.leiflarsen.org/posts/e-mail-course-on-blogging/</link>
      <pubDate>Mon, 28 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/e-mail-course-on-blogging/</guid>
      <description>After a while, where I have been struggling to write, I realized I needed to do something to keep this blog up. Maybe it has been the lack of interaction, or maybe not seeing a decent amount of traffic. I started to look for sources, as to how I could improve my blogging skills, and hopefully reach more people.
Some time ago I came across a guy named John Sonmez, which runs the blog Simple Programmer.</description>
    </item>
    
    <item>
      <title>Securing your Wordpress installation</title>
      <link>https://www.leiflarsen.org/posts/securing-your-wordpress-installation/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/securing-your-wordpress-installation/</guid>
      <description>I am using WordPress as my blog platform, as I find it to have all the features I need. As I have seen some increase in traffic over the past few months, I have also seen an increase in the number of brute-force attempts (if you want to know what a brute-force attack is, you can read up on it at Wikipedia). As a result, I thought I share a few tips on how you could be securing your WordPress installation.</description>
    </item>
    
    <item>
      <title>A first look into the world of Raspberry Pi</title>
      <link>https://www.leiflarsen.org/posts/a-first-look-into-the-world-of-raspberry-pi/</link>
      <pubDate>Sun, 30 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/a-first-look-into-the-world-of-raspberry-pi/</guid>
      <description>A few days ago I went to a local electronic store and bought myself a Raspberry Pi 2 Model B. I’ve read a bit about Windows 10 IoT Core, so I decided I wanted to try that, specifically for my home automation project I am slowly easing into.
The Pi comes in a small box, that looks like this:
And the Pi itself looks like this:
To be able to install Windows 10 IoT you need a class 10 micro SD card.</description>
    </item>
    
    <item>
      <title>My next project(s)</title>
      <link>https://www.leiflarsen.org/posts/my-next-projects/</link>
      <pubDate>Thu, 16 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/my-next-projects/</guid>
      <description>The last month, or so, has been quite hectic, but now that we have finally settled in, in our new apartment, I have time to start on my next project(s). I have several things lined up, and hopefully I’m able to set aside enough time to complete each project within reasonably time. It’s worth mentioning that these are all personal projects, not projects done at my job.
I will tell you a little bit about each project, and naturally I will give updates during development.</description>
    </item>
    
    <item>
      <title>Busy June</title>
      <link>https://www.leiflarsen.org/posts/busy-june/</link>
      <pubDate>Sun, 05 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/busy-june/</guid>
      <description>The month of June was quite busy for me. My SO and I came across an apartment we really liked in late May, and decided to bid on it. Fortunately, we got it, but that meant we had to sell the one we lived in. We were told that it would be best to sell it before the vacation started, so that meant preparing it for sale. This meant packing and storing most of our stuff away.</description>
    </item>
    
    <item>
      <title>Xamarin tutorial   iOS MapKit Part 3</title>
      <link>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-3/</link>
      <pubDate>Sat, 30 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-3/</guid>
      <description>This is the third and final post, in the three-part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the first post we looked at the initial setup of the project, as well as basic generation of a map view. The previous post took a look at annotations and how to create custom annotations. In this final post we will look at search functionality using MKLocalSearch.
The source code can still be found at GitHub.</description>
    </item>
    
    <item>
      <title>Microsoft Surface 3 Review</title>
      <link>https://www.leiflarsen.org/posts/microsoft-surface-3-review/</link>
      <pubDate>Wed, 20 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/microsoft-surface-3-review/</guid>
      <description>This is the end of my third week with my brand new Surface 3, so it’s time to give a short review of it. Before I get into the review itself, I think its wise to describe what I use the Surface for, so the terms of my review is clear.
The primary need for me is to have a tablet, which I can use to read and watch movies while traveling, as well as do some blogging and the occasional work at home.</description>
    </item>
    
    <item>
      <title>Xamarin Android Player</title>
      <link>https://www.leiflarsen.org/posts/xamarin-android-player/</link>
      <pubDate>Sat, 09 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/xamarin-android-player/</guid>
      <description>The Xamarin Android Player is an Android emulator, created by Xamarin. Currently it’s in early stages, and it’s a preview version that is available for those with a Xamarin Android trials or subscription.

Xamarin writes the following on the player:
 Xamarin Android Player has deep integration with Visual Studio and Xamarin Studio and a native user interface on both Mac &amp;amp; Windows. Running Android on an x86 virtual machine using hardware accelerated virtualization and OpenGL, Xamarin Android Player is significantly faster than the stock Android Emulator.</description>
    </item>
    
    <item>
      <title>Xamarin tutorial  iOS MapKit Part 2</title>
      <link>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-2/</link>
      <pubDate>Tue, 05 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-2/</guid>
      <description>This is the second post, in the three part tutorial, on using the iOS MapKit in a Xamarin iOS project. In the previous post we looked at the initial setup of the project, as well as basic generation of a map view. In this part we will go through the parts needed for annotations, and we’re going to look at how to create customized annotations.
The source code is still available at GitHub.</description>
    </item>
    
    <item>
      <title>Xamarin tutorial   iOS MapKit Part 1</title>
      <link>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-1/</link>
      <pubDate>Sun, 26 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/xamarin-tutorial-ios-mapkit-part-1/</guid>
      <description>Lately I have been working a great amount with iOS MapKit in Xamarin, to finish my first iOS app. Going through the work I found several good resources out there on how to do this, however; common for all of them is that they have been written for earlier versions of iOS than iOS 8. This has caused several issues to pop up during development, but through some googling I have been able to make it work.</description>
    </item>
    
    <item>
      <title>A small update</title>
      <link>https://www.leiflarsen.org/posts/a-small-update/</link>
      <pubDate>Sun, 19 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/a-small-update/</guid>
      <description>It’s been a while since I’ve written anything here, so I thought I’d just share a short update. I find myself struggling to find the time to blog, while going to work, the gym, programming and so on. On top of that the sun is showing up, and the weather is to good not to be outside.
My first app in the app store (“Parker Gratis“) has now been released a little over a month!</description>
    </item>
    
    <item>
      <title>Released my first iOS app</title>
      <link>https://www.leiflarsen.org/posts/released-my-first-ios-app/</link>
      <pubDate>Sat, 28 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/released-my-first-ios-app/</guid>
      <description>This Friday I released my first iOS app! It’s called “Parker gratis” (“Park for free”), and it is an app for the Norwegian market for now.
[A friend of me came up with the idea for the app. We were talking one day when he said that it would be nice to have an app where you could locate free parking spots nearby your location. I liked the thought of the idea, and decided to go on to create the app.</description>
    </item>
    
    <item>
      <title>Localization in Xamarin</title>
      <link>https://www.leiflarsen.org/posts/localization-in-xamarin/</link>
      <pubDate>Sat, 14 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/localization-in-xamarin/</guid>
      <description>Googling for this subject, localization in Xamarin, I really couldn’t find anything that really explained how to do it. Also Xamarin does not have any guides on how to do this, but there are a few posts in the forum in this regard. So this is my contribution to the world; a short write-up on how to translate your app to any language, the easy way.
First I need to mention that there are different ways this is done for iOS, Android and Windows Phone.</description>
    </item>
    
    <item>
      <title>Finishing a course on cryptography</title>
      <link>https://www.leiflarsen.org/posts/finishing-a-course-on-cryptography/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/finishing-a-course-on-cryptography/</guid>
      <description>Like I mentioned in my post, my goals for 2015, I was starting this year with a course on Coursera. The course is now reaching its end, and I want to tell you a bit about it. The course is a six-week course on cryptography, hosted on Coursera, and led by Dan Boneh, a professor at Stanford University. Dan Boneh is a professor in computer science and electrical engineering and his main research focus is applied cryptography and computer security.</description>
    </item>
    
    <item>
      <title>Why I chose Xamarin</title>
      <link>https://www.leiflarsen.org/posts/why-i-chose-xamarin/</link>
      <pubDate>Thu, 05 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/why-i-chose-xamarin/</guid>
      <description>I mentioned in an earlier post that I have chosen to use Xamarin for cross-platform development. In this post I will write a bit why I chose Xamarin.
My way towards app development started with the introduction of Windows 8. With the store Microsoft presented (and the lack of apps for it) I saw an opportunity to create some apps for the Windows platform. The first (and only one) app I created was a remote controller for Onkyo receivers, specially created for the Microsoft Surface.</description>
    </item>
    
    <item>
      <title>Relearning guitar</title>
      <link>https://www.leiflarsen.org/posts/relearning-guitar/</link>
      <pubDate>Thu, 29 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/relearning-guitar/</guid>
      <description>I’ve played guitar since I was around 16 years old. When I first started out I didn’t really do any courses or follow any learning paths, I just tried to play songs I liked, while having fun. I was fortunate enough to join a band, and can safely say that it was great for my skills. Not only did I learn to play fairly well, I also played well with others and on stage.</description>
    </item>
    
    <item>
      <title>I bought a Mac Mini</title>
      <link>https://www.leiflarsen.org/posts/i-bought-a-mac-mini/</link>
      <pubDate>Sun, 11 Jan 2015 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/i-bought-a-mac-mini/</guid>
      <description>So this post should really have been posted almost a year ago. Perhaps I should have chosen a different title. Oh well, I planned to write this post at the time, so let us assume I did, just with more impressions than I had back then.
So to get to the point; I bought a Mac Mini! I have always used Windows for everything, but I have always been curious about OS X and standardizing on Apple products at home.</description>
    </item>
    
    <item>
      <title>My goals for 2015</title>
      <link>https://www.leiflarsen.org/posts/my-goals-for-2015/</link>
      <pubDate>Mon, 29 Dec 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/my-goals-for-2015/</guid>
      <description>We’re about to leave 2014 behind, and enter what will be, at least for me, an exciting year.
Through the first month of the year I will participate in a course on coursera regarding cryptography. This is a free, online course, from Stanford University, lead by Dan Boneh. Cryptography is something I have picked up an interest in lately, alongside with computer security, so it will be interesting to see if I can get some better knowledge around this subject.</description>
    </item>
    
    <item>
      <title>Privacy settings in Windows store app</title>
      <link>https://www.leiflarsen.org/posts/privacy-settings-in-windows-store-app/</link>
      <pubDate>Sat, 12 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/privacy-settings-in-windows-store-app/</guid>
      <description>So recently I been working on finishing my first Windows store app. This app (which I will tell more about when it? been released) needs connection to the local network. This meant that this was a permission I would need to get from the user.
Thinking that since I did not store any data from the user, it would not need any privacy policy. This turned out to be wrong, and as I submitted the app, it only took a few hours before the feedback was “rejected”.</description>
    </item>
    
    <item>
      <title>Course on Agile development</title>
      <link>https://www.leiflarsen.org/posts/course-on-agile-development/</link>
      <pubDate>Fri, 11 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/course-on-agile-development/</guid>
      <description>A few weeks ago I participated in a course on Agile development, lead by Venkat Subramaniam. The course was a one day, two-part course, where the first part was an introduction to agile development with benefits of agile development, compared to other development methods. The second part was aiming to show technical practices to sustain agile development.
A few of the things I thought of as key points were frequent releases, early feedback, TDD and automated testing.</description>
    </item>
    
    <item>
      <title>LeapMotion</title>
      <link>https://www.leiflarsen.org/posts/leapmotion/</link>
      <pubDate>Thu, 25 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/leapmotion/</guid>
      <description>Today I finally received my LeapMotion. I sent in a pre-order over a year ago, and they finally released it a few days ago. Seeing as I received it today, I wanted to write a little about my first impression.
So far, so good! The first thing I had to do was to install the driver, to make it work. The installation was easy. You get directed to a setup page at LeapMotions web sites, where you download your installer.</description>
    </item>
    
    <item>
      <title>Windows Phone 8 SDK in VM</title>
      <link>https://www.leiflarsen.org/posts/windows-phone-8-sdk-in-vm/</link>
      <pubDate>Sat, 20 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/windows-phone-8-sdk-in-vm/</guid>
      <description>So recently I’ve been starting to work a bit with the Windows Phone 8 SDK, and since I don’t own a WP8 phone myself, my only option for testing is using the emulator from Visual Studio. At first I was hoping to use a virtual machine with Windows 8, but that gave me quite a bit of trouble. I got some error messages stating that there was some issues with the network interface, and after some googling I concluded that you cannot run the emulator inside a virtual machine.</description>
    </item>
    
    <item>
      <title>Implementing SOAP with PHP</title>
      <link>https://www.leiflarsen.org/posts/implementing-soap-with-php/</link>
      <pubDate>Thu, 30 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>https://www.leiflarsen.org/posts/implementing-soap-with-php/</guid>
      <description>Recently I have been working with a project requiring the use of SOAP. Beforehand my knowledge of SOAP was not great, but I had the basic idea of it. This project was therefore quite fun to do, because it caused a few challenges, and I learned a lot.
The idea was fairly simple; a customer should give some information (name, birthdate and zip number) to initiate an order form. This information was to be sent to a service called NUBIX, which would use this information to fetch more information about the customer.</description>
    </item>
    
  </channel>
</rss>